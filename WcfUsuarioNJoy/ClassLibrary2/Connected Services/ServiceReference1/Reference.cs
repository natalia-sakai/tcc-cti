//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClassLibrary2.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/InserirUsuario", ReplyAction="http://tempuri.org/IService1/InserirUsuarioResponse")]
        System.IAsyncResult BeginInserirUsuario(int id_avatar, int id_capa, string email, string usuario, string senha, int cep, int tipo_id, int logado, int moeda, string uf, int pontos, string cidade, System.AsyncCallback callback, object asyncState);
        
        bool EndInserirUsuario(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/EnviarEmail", ReplyAction="http://tempuri.org/IService1/EnviarEmailResponse")]
        System.IAsyncResult BeginEnviarEmail(string email, System.AsyncCallback callback, object asyncState);
        
        bool EndEnviarEmail(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ClassLibrary2.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InserirUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InserirUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnviarEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnviarEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ClassLibrary2.ServiceReference1.IService1>, ClassLibrary2.ServiceReference1.IService1 {
        
        private BeginOperationDelegate onBeginInserirUsuarioDelegate;
        
        private EndOperationDelegate onEndInserirUsuarioDelegate;
        
        private System.Threading.SendOrPostCallback onInserirUsuarioCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnviarEmailDelegate;
        
        private EndOperationDelegate onEndEnviarEmailDelegate;
        
        private System.Threading.SendOrPostCallback onEnviarEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() : 
                base(Service1Client.GetDefaultBinding(), Service1Client.GetDefaultEndpointAddress()) {
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), Service1Client.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Não é possível definiro CookieContainer. Verifique se que a ligação contém um Htt" +
                            "pCookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<InserirUsuarioCompletedEventArgs> InserirUsuarioCompleted;
        
        public event System.EventHandler<EnviarEmailCompletedEventArgs> EnviarEmailCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ClassLibrary2.ServiceReference1.IService1.BeginInserirUsuario(int id_avatar, int id_capa, string email, string usuario, string senha, int cep, int tipo_id, int logado, int moeda, string uf, int pontos, string cidade, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInserirUsuario(id_avatar, id_capa, email, usuario, senha, cep, tipo_id, logado, moeda, uf, pontos, cidade, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool ClassLibrary2.ServiceReference1.IService1.EndInserirUsuario(System.IAsyncResult result) {
            return base.Channel.EndInserirUsuario(result);
        }
        
        private System.IAsyncResult OnBeginInserirUsuario(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id_avatar = ((int)(inValues[0]));
            int id_capa = ((int)(inValues[1]));
            string email = ((string)(inValues[2]));
            string usuario = ((string)(inValues[3]));
            string senha = ((string)(inValues[4]));
            int cep = ((int)(inValues[5]));
            int tipo_id = ((int)(inValues[6]));
            int logado = ((int)(inValues[7]));
            int moeda = ((int)(inValues[8]));
            string uf = ((string)(inValues[9]));
            int pontos = ((int)(inValues[10]));
            string cidade = ((string)(inValues[11]));
            return ((ClassLibrary2.ServiceReference1.IService1)(this)).BeginInserirUsuario(id_avatar, id_capa, email, usuario, senha, cep, tipo_id, logado, moeda, uf, pontos, cidade, callback, asyncState);
        }
        
        private object[] OnEndInserirUsuario(System.IAsyncResult result) {
            bool retVal = ((ClassLibrary2.ServiceReference1.IService1)(this)).EndInserirUsuario(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInserirUsuarioCompleted(object state) {
            if ((this.InserirUsuarioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InserirUsuarioCompleted(this, new InserirUsuarioCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InserirUsuarioAsync(int id_avatar, int id_capa, string email, string usuario, string senha, int cep, int tipo_id, int logado, int moeda, string uf, int pontos, string cidade) {
            this.InserirUsuarioAsync(id_avatar, id_capa, email, usuario, senha, cep, tipo_id, logado, moeda, uf, pontos, cidade, null);
        }
        
        public void InserirUsuarioAsync(int id_avatar, int id_capa, string email, string usuario, string senha, int cep, int tipo_id, int logado, int moeda, string uf, int pontos, string cidade, object userState) {
            if ((this.onBeginInserirUsuarioDelegate == null)) {
                this.onBeginInserirUsuarioDelegate = new BeginOperationDelegate(this.OnBeginInserirUsuario);
            }
            if ((this.onEndInserirUsuarioDelegate == null)) {
                this.onEndInserirUsuarioDelegate = new EndOperationDelegate(this.OnEndInserirUsuario);
            }
            if ((this.onInserirUsuarioCompletedDelegate == null)) {
                this.onInserirUsuarioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInserirUsuarioCompleted);
            }
            base.InvokeAsync(this.onBeginInserirUsuarioDelegate, new object[] {
                        id_avatar,
                        id_capa,
                        email,
                        usuario,
                        senha,
                        cep,
                        tipo_id,
                        logado,
                        moeda,
                        uf,
                        pontos,
                        cidade}, this.onEndInserirUsuarioDelegate, this.onInserirUsuarioCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ClassLibrary2.ServiceReference1.IService1.BeginEnviarEmail(string email, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnviarEmail(email, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool ClassLibrary2.ServiceReference1.IService1.EndEnviarEmail(System.IAsyncResult result) {
            return base.Channel.EndEnviarEmail(result);
        }
        
        private System.IAsyncResult OnBeginEnviarEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            return ((ClassLibrary2.ServiceReference1.IService1)(this)).BeginEnviarEmail(email, callback, asyncState);
        }
        
        private object[] OnEndEnviarEmail(System.IAsyncResult result) {
            bool retVal = ((ClassLibrary2.ServiceReference1.IService1)(this)).EndEnviarEmail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnviarEmailCompleted(object state) {
            if ((this.EnviarEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnviarEmailCompleted(this, new EnviarEmailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnviarEmailAsync(string email) {
            this.EnviarEmailAsync(email, null);
        }
        
        public void EnviarEmailAsync(string email, object userState) {
            if ((this.onBeginEnviarEmailDelegate == null)) {
                this.onBeginEnviarEmailDelegate = new BeginOperationDelegate(this.OnBeginEnviarEmail);
            }
            if ((this.onEndEnviarEmailDelegate == null)) {
                this.onEndEnviarEmailDelegate = new EndOperationDelegate(this.OnEndEnviarEmail);
            }
            if ((this.onEnviarEmailCompletedDelegate == null)) {
                this.onEnviarEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnviarEmailCompleted);
            }
            base.InvokeAsync(this.onBeginEnviarEmailDelegate, new object[] {
                        email}, this.onEndEnviarEmailDelegate, this.onEnviarEmailCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ClassLibrary2.ServiceReference1.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1)) {
                return new System.ServiceModel.EndpointAddress("http://njoy.kinghost.net/wcf/Service1.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return Service1Client.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return Service1Client.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        private class Service1ClientChannel : ChannelBase<ClassLibrary2.ServiceReference1.IService1>, ClassLibrary2.ServiceReference1.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<ClassLibrary2.ServiceReference1.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInserirUsuario(int id_avatar, int id_capa, string email, string usuario, string senha, int cep, int tipo_id, int logado, int moeda, string uf, int pontos, string cidade, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[12];
                _args[0] = id_avatar;
                _args[1] = id_capa;
                _args[2] = email;
                _args[3] = usuario;
                _args[4] = senha;
                _args[5] = cep;
                _args[6] = tipo_id;
                _args[7] = logado;
                _args[8] = moeda;
                _args[9] = uf;
                _args[10] = pontos;
                _args[11] = cidade;
                System.IAsyncResult _result = base.BeginInvoke("InserirUsuario", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndInserirUsuario(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("InserirUsuario", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnviarEmail(string email, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = email;
                System.IAsyncResult _result = base.BeginInvoke("EnviarEmail", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndEnviarEmail(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("EnviarEmail", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IService1,
        }
    }
}
